{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"thresh",
				"threshold_value	statement"
			],
			[
				"mas",
				"master_image	statement"
			],
			[
				"start",
				"start_fps	statement"
			],
			[
				"ret",
				"retVal	statement"
			],
			[
				"dia",
				"dia_y	statement"
			],
			[
				"im",
				"imshow	function"
			],
			[
				"di",
				"dilation	statement"
			],
			[
				"camera",
				"camera_control_ui"
			],
			[
				"Ha",
				"HardwareLoader	class"
			],
			[
				"d",
				"dtype"
			],
			[
				"focal",
				"focal_point_to_center_mm"
			],
			[
				"half",
				"half_pixel_yx	statement"
			],
			[
				"cam",
				"camera_pixels_shape_yx	param"
			],
			[
				"print",
				"print_data	function"
			],
			[
				"a",
				"array2	param"
			],
			[
				"las",
				"laser_rad	statement"
			],
			[
				"rad",
				"rad2deg	instance"
			],
			[
				"res",
				"results	statement"
			],
			[
				"get",
				"get_formatted_float_list	function"
			],
			[
				"pri",
				"print_formatted_list	function"
			],
			[
				"pix",
				"pixel_size_x	statement"
			],
			[
				"pixel",
				"pixel_y	statement"
			],
			[
				"ha",
				"half_sensor_x	statement"
			],
			[
				"sen",
				"sensor_size_x	statement"
			],
			[
				"expe",
				"expected_a_normal	statement"
			],
			[
				"inter",
				"intersections_rad_mm	param"
			],
			[
				"setu",
				"setup_i2p	function"
			],
			[
				"go",
				"go_method	param"
			],
			[
				"ra",
				"raw_points_xyz	statement"
			],
			[
				"gobu",
				"go_buttons"
			],
			[
				"st",
				"start_points_capture	function"
			],
			[
				"Num",
				"NumericProperty"
			],
			[
				"mock",
				"mock_hardware	statement"
			],
			[
				"ass",
				"assertEquals	statement"
			],
			[
				"ex",
				"expected	statement"
			],
			[
				"poin",
				"points_xyz"
			],
			[
				"deg",
				"deg_to_rad	function"
			],
			[
				"size",
				"size_hint"
			],
			[
				"in",
				"intersections_rad_mm	statement"
			],
			[
				"iter",
				"itera	statement"
			],
			[
				"ite",
				"itera	statement"
			],
			[
				"as",
				"astype"
			],
			[
				"bit",
				"bitwise_and	instance"
			],
			[
				"no",
				"notthresh	statement"
			],
			[
				"points",
				"points_count	statement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "spikes/spike_line.py",
			"settings":
			{
				"buffer_size": 4715,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import sublime, sublime_plugin\n\nclass ExampleCommand(sublime_plugin.TextCommand):\n	def run(self, edit):\n		self.view.insert(edit, 0, \"Hello, World!\")\n",
			"settings":
			{
				"buffer_size": 149,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/infrastructure/laser_detector.py",
			"settings":
			{
				"buffer_size": 2412,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/ui/video.py",
			"settings":
			{
				"buffer_size": 4206,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/infrastructure/camera.py",
			"settings":
			{
				"buffer_size": 1660,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Virtual Enviroment Python",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Virtual Enviroment Python",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Virtual Enviroment Python",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/opt/git/peachyscanner",
		"/opt/git/peachyscanner/spikes",
		"/opt/git/peachyscanner/spikes/resources",
		"/opt/git/peachyscanner/spikes/resources/shaders",
		"/opt/git/peachyscanner/src",
		"/opt/git/peachyscanner/src/api",
		"/opt/git/peachyscanner/src/infrastructure",
		"/opt/git/peachyscanner/src/resources",
		"/opt/git/peachyscanner/src/resources/images",
		"/opt/git/peachyscanner/src/resources/shaders",
		"/opt/git/peachyscanner/src/resources/support",
		"/opt/git/peachyscanner/src/ui",
		"/opt/git/peachyscanner/test"
	],
	"file_history":
	[
		"/opt/git/peachyscanner/spikes/spike_laser_detector2.py",
		"/opt/git/peachyscanner/src/ui/hardware.kv",
		"/opt/git/peachyscanner/src/ui/capture_control.py",
		"/opt/git/peachyscanner/src/ui/laserdetection.kv",
		"/opt/git/peachyscanner/test/spikeVideo.py",
		"/opt/git/peachyscanner/src/infrastructure/laser_detector.py",
		"/opt/git/peachyscanner/src/ui/capture_control.kv",
		"/opt/git/peachyscanner/src/peachyscanner.kv",
		"/opt/git/peachyscanner/test/infrastructure_test/test_roi.py",
		"/opt/git/peachyscanner/src/ui/hardware.py",
		"/opt/git/peachyscanner/src/infrastructure/encoder.py",
		"/opt/git/peachyscanner/src/gui.py",
		"/opt/git/peachyscanner/src/infrastructure/roi.py",
		"/opt/git/peachyscanner/src/infrastructure/video_processor.py",
		"/opt/git/peachyscanner/test/infrastructure_test/test_image_2_points.py",
		"/opt/git/peachyscanner/test/infrastructure_test/test_data_capture.py",
		"/opt/git/peachyscanner/src/ui/video.py",
		"/opt/git/peachyscanner/src/infrastructure/image_2_points.py",
		"/opt/git/peachyscanner/src/infrastructure/data_capture.py",
		"/home/jtownley/Desktop/RecordCenterScreen.sh",
		"/opt/git/peachyscanner/test/infrastructure_test/test_image_2_points_cheat_sheet.py",
		"/opt/git/peachyscanner/src/infrastructure/gl_point_converter.py",
		"/opt/git/peachyscanner/src/api/scanner.py",
		"/opt/git/peachyscanner/tmp/opencv/opencv-3.0.0/release/lib/libopencv_core.so.3.0.0",
		"/opt/git/peachyscanner/tmp/opencv/opencv-3.0.0/release/lib/libopencv_core.so.3.0",
		"/opt/git/peachyscanner/tmp/opencv/opencv-3.0.0/modules/core/src/ocl.cpp",
		"/opt/git/peachyscanner/tmp/opencv/opencv-3.0.0/3rdparty/include/opencl/1.2/CL/cl_platform.h",
		"/opt/git/peachyscanner/spikes/spike_ray_plane_intersection.py",
		"/opt/git/peachyscanner/spikes/spike_rotopoint.py",
		"/opt/git/peachyscanner/spikes/spike_translate_speed.py",
		"/opt/git/peachyscanner/test/api_test/test_scanner.py",
		"/opt/git/peachyscanner/src/main.py",
		"/opt/git/peachyscanner/src/infrastructure/hardware.py",
		"/home/jtownley/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
		"/opt/git/peachyscanner/test/run_all_tests.py",
		"/opt/git/peachyscanner/test/infrastructure_test/test_hardware.py",
		"/opt/git/peachyscanner/spikes/spike_line.py",
		"/home/jtownley/Desktop/Parsedlog_for_bug_109486318.log",
		"/opt/git/peachyscanner/peachyscanner.sublime-project",
		"/home/jtownley/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/opt/git/peachyscanner/src/infrastructure/writer.py",
		"/opt/git/peachyscanner/test/infrastructure_test/test_writer.py",
		"/opt/git/peachyscanner/spike_line.py",
		"/opt/git/peachyscanner/build.sh",
		"/opt/git/peachyscanner/test/infrastructure_test/test_gl_point_converter.py",
		"/opt/git/peachyscanner/src/setup.py",
		"/opt/git/peachyscanner/requirements.txt",
		"/home/jtownley/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/opt/git/peachyscanner/src,-venv/*",
			"/opt/git/peachyscanner,-venv/*",
			"/opt/git/peachyscanner/src,-venv/*"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Threshold_value",
			"a_val",
			"sigma",
			"Master",
			"'frame1'",
			", :",
			"fps",
			"l",
			"30",
			"print",
			"math",
			"{}",
			"self._history",
			"rgba: [1, 1, 1, 0.2]",
			"manager",
			"self.",
			"MyScreenManager",
			"float64",
			"float16",
			": .5f",
			".3f",
			"0",
			"(480, 240",
			"(320, 240",
			"camera_sensor_size_mm",
			"\".fo",
			"\n            ",
			"c_rad",
			"04",
			", ",
			"0",
			"= sensor",
			"sensor",
			"phi",
			"tau",
			"theta",
			"{:-.4f}",
			"{:.4f}",
			"camera_y",
			"camera_x",
			"camera_",
			"camera_x",
			"2f}",
			"_history",
			"?",
			"info",
			"size_hint: (None, None)\n                    width: '10dp'\n                    height: app.label_height",
			"size_hint: (None, None)\n                    height: app.label_height\n                    width: '15dp'",
			"Label:\n                    size_hint: (None, None)\n                    height: app.label_height\n                    width: '15dp'",
			"PointCaptureXYZ(",
			"roi=self.roi)",
			"capture_points",
			"PointCapture",
			"float",
			"XX",
			"TextInput:\n",
			"get_points(",
			"get_points",
			"focal_point_to_center_mm",
			"rad",
			"_laser_plane_normal_xyz",
			"laser_center_intersection_rad",
			"WARNING:\\s[ -:0-9]*layer_control.*",
			"WARNING:\\s[ -:0-9]*gcode.*",
			"INFO:\\s[ -:0-9]*path_to_points.*",
			"INFO:\\s[ -:0-9]*calibration_api - Calu.*",
			"INFO:\\s[ -:0-9]*layer.*",
			"INFO:\\s[ -:0-9]*communicator.*",
			"1"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"float16",
			"float64"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "spikes/spike_line.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4715,
						"regions":
						{
						},
						"selection":
						[
							[
								1928,
								1928
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 871.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 149,
						"regions":
						{
						},
						"selection":
						[
							[
								106,
								106
							]
						],
						"settings":
						{
							"default_dir": "/home/jtownley/.config/sublime-text-3/Packages/User",
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "src/infrastructure/laser_detector.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2412,
						"regions":
						{
						},
						"selection":
						[
							[
								908,
								908
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 78.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/ui/video.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4206,
						"regions":
						{
						},
						"selection":
						[
							[
								2635,
								2635
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 585.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/infrastructure/camera.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1660,
						"regions":
						{
						},
						"selection":
						[
							[
								970,
								970
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 20.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.429187049368,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 365.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "peachyscanner.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"video",
				"src/ui/video.py"
			],
			[
				"camera",
				"src/infrastructure/camera.py"
			],
			[
				"laser",
				"src/infrastructure/laser_detector.py"
			],
			[
				"spike",
				"spikes/spike_laser_detector2.py"
			],
			[
				"las",
				"src/infrastructure/laser_detector.py"
			],
			[
				"cap",
				"src/ui/capture_control.py"
			],
			[
				"vi",
				"src/infrastructure/video_processor.py"
			],
			[
				"roi",
				"test/infrastructure_test/test_roi.py"
			],
			[
				"enco",
				"src/infrastructure/encoder.py"
			],
			[
				"peachy",
				"src/peachyscanner.kv"
			],
			[
				"test_image",
				"test/infrastructure_test/test_image_2_points.py"
			],
			[
				"test",
				"test/infrastructure_test/test_data_capture.py"
			],
			[
				"image",
				"src/infrastructure/image_2_points.py"
			],
			[
				"data",
				"src/infrastructure/data_capture.py"
			],
			[
				"test_im",
				"test/infrastructure_test/test_image_2_points_cheat_sheet.py"
			],
			[
				"test_ima",
				"test/infrastructure_test/test_image_2_points.py"
			],
			[
				"imag",
				"src/infrastructure/image_2_points.py"
			],
			[
				"scann",
				"src/api/scanner.py"
			],
			[
				"vido",
				"src/ui/video.py"
			],
			[
				"vid",
				"src/infrastructure/video_processor.py"
			],
			[
				"sca",
				"src/api/scanner.py"
			],
			[
				"hark",
				"src/ui/hardware.kv"
			],
			[
				"hard",
				"src/infrastructure/hardware.py"
			],
			[
				"gui",
				"src/gui.py"
			],
			[
				"main",
				"src/main.py"
			],
			[
				"hardware",
				"src/infrastructure/hardware.py"
			],
			[
				"scanner",
				"src/api/scanner.py"
			],
			[
				"test_data",
				"test/infrastructure_test/test_data_capture.py"
			],
			[
				"test_ha",
				"test/infrastructure_test/test_hardware.py"
			],
			[
				"test_iamg",
				"test/infrastructure_test/test_image_2_points.py"
			],
			[
				"gl",
				"src/infrastructure/gl_point_converter.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 259.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
